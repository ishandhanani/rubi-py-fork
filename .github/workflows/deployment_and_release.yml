#to initiate testing -> i will make pushes to test pypi from a different branch

name: Deployment to PyPi and Github releases for rubi-py

on:
  push:
    branches: ["master"]

jobs:
  release: 
    runs-on: ubuntu-latest
    if: github.event_name == 'push' #&& github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      # Cache installation of poetry to prevent workflow installation
      # every time which can be slow. Based on 
      # https://jacobian.org/til/github-actions-poetry/
      # Setting it this way allows you to invalidate cache manually
      # if/when we want to upgrade poetry 
      - name: cache poetry install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-1.5.1-0
      - name: Install poetry 
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependancies
        run: |
          cd rubi
          poetry install
      - name: Prepare GH release   
        run: |
          cd rubi
          git config user.name github-actions
          git config user.email github-actions@github.com
          poetry run semantic-release publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Deploy to Test PYPI
      - name: Test PyPi deployment
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_KEY }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: ./rubi/dist
  
  # Goal is to create a completely separate runner and test install rubi from Test PyPi
  test-install:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Setup Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      # Test install from Test PyPi
      - name: Test install from Test PyPi
        run: |
          pip install -i https://test.pypi.org/simple/ rubi

# the git release needs to happen between the test pypi and the full pypi





